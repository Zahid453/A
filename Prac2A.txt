import pandas as pd
import numpy as np
from tensorflow import keras
from tensorflow.keras import layers, Sequential
from tensorflow.keras.layers import Dense
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score, confusion_matrix

df = pd.read_csv("/content/Prac 2A -- Churn Modelling.csv")
df

df.drop(columns = ['RowNumber', 'CustomerId', 'Surname'], axis = 'columns', inplace = True)

data = pd.get_dummies(df, columns  =['Geography', 'Gender'], dtype = int, drop_first=True)

data

x = data.drop(columns = 'Exited')
x
y = data.Exited
y

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.2, random_state= 42)

Scaler = StandardScaler()
x_train = Scaler.fit_transform(x_train)
x_test = Scaler.transform(x_test)

Model = Sequential()
Model.add(Dense(3, activation='sigmoid', input_dim = 11))
Model.add(Dense(2, activation='sigmoid'))
Model.add(Dense(1, activation='sigmoid'))
Model.summary()

Model.compile(loss='binary_crossentropy', optimizer='Adam', metrics=['accuracy'])
Model.layers[0].get_weights()

Model.fit(x_train,y_train,epochs=10)

YP = Model.predict(x_test)
accuracy_score(y_test,YP.round())